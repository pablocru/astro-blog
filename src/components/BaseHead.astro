---
// Inspired on: https://github.com/withastro/astro/blob/main/examples/blog/src/components/BaseHead.astro

import { getFontsPath } from "@/utils/get-fonts-path";
import { importImage } from "@/utils/import-image";
import type { BaseHeadProps } from "@/types";

type Props = BaseHeadProps;

const {
  author = "Pablo Cru Delhom",
  coverName = "to-blog-or-not-to-blog-by-suzy-hazelwood.avif",
  description = "Blog powered by Astro",
  title = "Astro Blog",
} = Astro.props;

const baseUrl = import.meta.env.BASE_URL;
const faviconPath = baseUrl + "favicon.svg";

const fonts = await getFontsPath();
---

{/* Global Metadata */}
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/svg+xml" href={faviconPath} />
<meta name="generator" content={Astro.generator} />

{/* Primary Meta Tags */}
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />

{/* Canonical URL */}
<link rel="canonical" href={Astro.url} />

{
  /* Preload Fonts */
  fonts?.length &&
    fonts.map((font) => (
      <link
        crossorigin
        rel="preload"
        as="font"
        type="font/woff2"
        href={baseUrl + font}
      />
    ))
}

{/* Open Graph / Facebook */}
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{
  importImage(coverName).then((image) => (
    <meta property="og:image" content={image.default.src} />
  ))
}

{/* Twitter */}
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{
  importImage(coverName).then((image) => (
    <meta property="twitter:image" content={image.default.src} />
  ))
}
